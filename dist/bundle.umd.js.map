{"version":3,"file":"bundle.umd.js","sources":["../src/core/dataStore.js","../src/userBehavior/index.js","../src/userBehavior/click.js","../src/index.js","../src/core/utils.js","../src/performance/index.js"],"sourcesContent":["// 全局数据集合管理\r\n\r\n// 设计全局数据\r\nconst dataStore = {\r\n  activeDataSets: {}, // 正在统计的子数据集，内部会有更详细的业务维度\r\n  deviceInfo: {}, //设备信息\r\n  globalData: {},\r\n};\r\n\r\n// 创建一个子数据集\r\nexport function createDataSet(id) {\r\n  dataStore.activeDataSets[id] = {\r\n    id,\r\n    startTime: Date.now(),\r\n    performanceMetrics: {}, //性能指标\r\n    userActions: {}, //用户行为\r\n    customData: {}, //业务字段\r\n  };\r\n}\r\n\r\n// 获取子数据集的方法\r\nexport function getDataSet(id) {\r\n  return dataStore.activeDataSets[id];\r\n}\r\n\r\n// 删除子数据集的方法\r\nexport function deleteDataSet(id) {\r\n  const data = dataStore.activeDataSets[id];\r\n  delete dataStore.activeDataSets[id];\r\n  console.log(\"成功删除信息\", data);\r\n  return data;\r\n}\r\n\r\n// 更新子数据集的方法\r\nexport function updateDataSet(id, key, value) {\r\n  const dataSet = getDataSet(id);\r\n  if (dataSet) {\r\n    dataSet[key] = value;\r\n  }\r\n}\r\n\r\n// 获取全局数据的方法\r\nexport function getGlobalData() {\r\n  return dataStore.globalData;\r\n}\r\n\r\n// 更新全局数据的方法\r\nexport function updateGlobalData(key, value) {\r\n  dataStore.globalData[key] = value;\r\n}\r\n","import { trackClick } from \"./click\";\r\n\r\nexport function initBehaviorTracking(dataSetId) {\r\n  const stopClickTracking = trackClick(dataSetId);\r\n\r\n  return () => {\r\n    stopClickTracking();\r\n  };\r\n}\r\n","import { updateDataSet } from \"../core/dataStore\";\r\n\r\nexport function trackClick(dataSetId) {\r\n  const handleClick = (event) => {\r\n    const action = {\r\n      type: \"click\",\r\n      target: event.target.tagName,\r\n      timestamp: Date.now(),\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n    };\r\n    updateDataSet(dataSetId, \"userActions\", (actions = []) => [\r\n      ...actions,\r\n      action,\r\n    ]);\r\n  };\r\n  //   添加事件监听器\r\n  document.addEventListener(\"click\", handleClick);\r\n\r\n  return () => {\r\n    document.removeEventListener(\"click\", handleClick);\r\n  };\r\n}\r\n","import { generateUniqueId } from \"./core/utils\";\r\nimport { collectPerformanceMetrics } from \"./performance/index\";\r\nimport { updateDataSet, createDataSet, deleteDataSet } from \"./core/dataStore\";\r\nimport { initBehaviorTracking } from \"./userBehavior/index\";\r\nimport config from \"./config\";\r\n\r\n// 用户行为全部终止的命令集\r\nlet stopBehaviorTracking = null;\r\n\r\nexport function start() {\r\n  const id = generateUniqueId();\r\n  createDataSet(id);\r\n\r\n  if (config.enablePerformanceTracking) {\r\n    const metrics = collectPerformanceMetrics();\r\n    updateDataSet(id, \"performanceMetrics\", metrics);\r\n  }\r\n  if (config.enableBehaviorTracking) {\r\n    stopBehaviorTracking = initBehaviorTracking(id);\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nexport function stop(dataSetId) {\r\n  const data = deleteDataSet(dataSetId);\r\n  if (stopBehaviorTracking) {\r\n    stopBehaviorTracking();\r\n  }\r\n  return data;\r\n}\r\n","// 工具函数定义\r\n\r\n// 生成唯一ID\r\nexport function generateUniqueId() {\r\n  return `id-${Date.now()}-${Math.random().toString(16).substring(2)}`;\r\n}\r\n\r\n","// 收集性能指标\r\nexport function collectPerformanceMetrics() {\r\n  const metrics = {};\r\n\r\n  // DOM 加载时间\r\n  metrics.domContentLoadedTime =\r\n    document.timing.domContentLoadedEventEnd -\r\n    document.timing.domContentLoadedEventStart;\r\n\r\n  // 页面加载时间\r\n  metrics.loadEventTime =\r\n    document.timing.loadEventEnd - document.timing.loadEventStart;\r\n\r\n  // 首次绘制时间\r\n  const [paint] = document.timing.getEntriesByType(\"paint\");\r\n  if (paint) {\r\n    metrics.firstPaintTime = paint.startTime;\r\n  }\r\n\r\n  return metrics;\r\n}\r\n"],"names":["dataStore","activeDataSets","deviceInfo","globalData","updateDataSet","id","key","value","dataSet","getDataSet","initBehaviorTracking","dataSetId","stopClickTracking","handleClick","event","action","type","target","tagName","timestamp","Date","now","x","clientX","y","clientY","concat","_toConsumableArray","arguments","length","undefined","document","addEventListener","removeEventListener","trackClick","stopBehaviorTracking","Math","random","toString","substring","startTime","performanceMetrics","userActions","customData","createDataSet","metrics","domContentLoadedTime","timing","domContentLoadedEventEnd","domContentLoadedEventStart","loadEventTime","loadEventEnd","loadEventStart","paint","_slicedToArray","getEntriesByType","firstPaintTime","collectPerformanceMetrics","data","console","log","deleteDataSet"],"mappings":"qmDAGA,IAAMA,EAAY,CAChBC,eAAgB,CAAE,EAClBC,WAAY,CAAE,EACdC,WAAY,CAAC,GA4BR,SAASC,EAAcC,EAAIC,EAAKC,GACrC,IAAMC,EAdD,SAAoBH,GACzB,OAAOL,EAAUC,eAAeI,EAClC,CAYkBI,CAAWJ,GACvBG,IACFA,EAAQF,GAAOC,EAEnB,CCrCO,SAASG,EAAqBC,GACnC,IAAMC,ECDD,SAAoBD,GACzB,IAAME,EAAc,SAACC,GACnB,IAAMC,EAAS,CACbC,KAAM,QACNC,OAAQH,EAAMG,OAAOC,QACrBC,UAAWC,KAAKC,MAChBC,EAAGR,EAAMS,QACTC,EAAGV,EAAMW,SAEXrB,EAAcO,EAAW,eAAe,WAAa,MAAA,GAAAe,OAAAC,EAALC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAEjDb,GAAM,KAMV,OAFAgB,SAASC,iBAAiB,QAASnB,GAE5B,WACLkB,SAASE,oBAAoB,QAASpB,GAE1C,CDnB4BqB,CAAWvB,GAErC,OAAO,WACLC,IAEJ,CEDA,IAAIuB,EAAuB,aAEpB,WACL,IAAM9B,ECNNqB,MAAAA,OAAaN,KAAKC,MAAK,KAAAK,OAAIU,KAAKC,SAASC,SAAS,IAAIC,UAAU,IDiBhE,OHXK,SAAuBlC,GAC5BL,EAAUC,eAAeI,GAAM,CAC7BA,GAAAA,EACAmC,UAAWpB,KAAKC,MAChBoB,mBAAoB,CAAE,EACtBC,YAAa,CAAE,EACfC,WAAY,CAAE,EAElB,CGPEC,CAAcvC,GAIZD,EAAcC,EAAI,qBEdf,WACL,IAAMwC,EAAU,CAAA,EAGhBA,EAAQC,qBACNf,SAASgB,OAAOC,yBAChBjB,SAASgB,OAAOE,2BAGlBJ,EAAQK,cACNnB,SAASgB,OAAOI,aAAepB,SAASgB,OAAOK,eAGjD,IAAOC,EAAkDC,EAAzCvB,SAASgB,OAAOQ,iBAAiB,SAAQ,GAA7C,GAKZ,OAJIF,IACFR,EAAQW,eAAiBH,EAAMb,WAG1BK,CACT,CFNoBY,IAIhBtB,EAAuBzB,EAAqBL,GAGvCA,CACT,SAEO,SAAcM,GACnB,IAAM+C,EHCD,SAAuBrD,GAC5B,IAAMqD,EAAO1D,EAAUC,eAAeI,GAGtC,cAFOL,EAAUC,eAAeI,GAChCsD,QAAQC,IAAI,SAAUF,GACfA,CACT,CGNeG,CAAclD,GAI3B,OAHIwB,GACFA,IAEKuB,CACT"}